<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Adam Ruul</title>
    <link>https://adamruul.github.io/post/</link>
    <description>Recent content in Posts on Adam Ruul</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 29 Sep 2016 20:14:20 +0200</lastBuildDate>
    <atom:link href="https://adamruul.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Temperature-based Wireless Communication</title>
      <link>https://adamruul.github.io/post/sendor-nodes/</link>
      <pubDate>Thu, 29 Sep 2016 20:14:20 +0200</pubDate>
      
      <guid>https://adamruul.github.io/post/sendor-nodes/</guid>
      <description>

&lt;p&gt;This project is a prototype used for investigating the feasibility of communicating with sensor nodes using controlled temperature fluctuations. Using temperature fluctuations for wireless communication, could potentially have multiple benefits. Compared to electromagnetic waves, temperature fluctuations could provide more secure wireless communication. Also, temperature fluctuation-based communication could enable devices without hardware for wireless communication for the IoT. The prototype system is capable of sending bytes using temperature fluctuations that will be interpreted as ASCII-characters, at a rate of 0.25 bit/s and at a distance of 2 meters (without any bit errors). The low bitrate is mostly due to limitations of how fast the lamp could be dimmed.&lt;/p&gt;

&lt;p&gt;The prototype system consist of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Genuino 101 board&lt;/li&gt;
&lt;li&gt;Beurer IL 11 Infrared lamp&lt;/li&gt;
&lt;li&gt;Everspring dimmer (a ZWave based dimmer)&lt;/li&gt;
&lt;li&gt;Aeotec Z-Stick Series 2 (a dongle used for communicating with the dimmer)&lt;/li&gt;
&lt;li&gt;Adafruit BMP280-temperature sensor&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;demo-video&#34;&gt;Demo Video&lt;/h2&gt;

&lt;p&gt;To the left you can see the system in action, In the middle you can see the terminal for the transmitting node, and to the right we have the console for the receiving node.&lt;/p&gt;

&lt;p&gt;In the video below, we can see the transmitter first idling for a while, before sending a initialization sequence &lt;code&gt;1,0,0,0,0,0,0,1&lt;/code&gt; followed by the message &lt;code&gt;&amp;quot;Hej&amp;quot;&lt;/code&gt;, and finally send an end-transmission sequence &lt;code&gt;0,0,0,0,0,1,0,0&lt;/code&gt;&lt;/p&gt;

&lt;iframe width=&#34;100%&#34; height=&#34;400px&#34; src=&#34;https://www.youtube.com/embed/pYIxn5YdeSc&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
  </channel>
</rss>