<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>/Adam Ruul</title>
    <link>https://adamruul.github.io/</link>
    <description>Recent content on /Adam Ruul</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 29 Sep 2016 20:14:20 +0200</lastBuildDate>
    <atom:link href="https://adamruul.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Communicating To Sensor Nodes Using Controlled Temperature Changes</title>
      <link>https://adamruul.github.io/post/sendor-nodes/</link>
      <pubDate>Thu, 29 Sep 2016 20:14:20 +0200</pubDate>
      
      <guid>https://adamruul.github.io/post/sendor-nodes/</guid>
      <description>

&lt;p&gt;This project is a prototype used for investigating the feasibility of communicating with sensor nodes using controlled temperature fluctuations. Using temperature fluctuations for wireless communication, could potentially have multiple benefits. Compared to electromagnetic waves, temperature fluctuations could provide more secure wireless communication. Also, temperature fluctuation-based communication could enable devices without hardware for wireless communication for the IoT. The prototype system is capable of sending bytes using temperature fluctuations that will be interpreted as ASCII-characters, at a rate of 0.25 bit/s and at a distance of 2 meters (without any bit errors).&lt;/p&gt;

&lt;p&gt;The prototype system consist of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Genuino 101 board&lt;/li&gt;
&lt;li&gt;Beurer IL 11 Infrared lamp&lt;/li&gt;
&lt;li&gt;Everspring dimmer (a ZWave based dimmer)&lt;/li&gt;
&lt;li&gt;Aeotec Z-Stick Series 2 (a dongle for communicating with the dimmer)&lt;/li&gt;
&lt;li&gt;Adafruit BMP280- temperature sensor&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;demo-video&#34;&gt;Demo Video&lt;/h2&gt;

&lt;p&gt;To the left you can see the system in action, In the middle we have the transmitting node, and to the right we have the receiving node.&lt;/p&gt;

&lt;p&gt;In the video below, we can see the transmitter first idling for a while, before sending a initialization sequence (1,0,0,0,0,0,0,1) followed by the message &amp;ldquo;Hej&amp;rdquo;, and finally send an end-transmission sequence (0,0,0,0,0,1,0,0)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>welcome</title>
      <link>https://adamruul.github.io/post/welcome/</link>
      <pubDate>Thu, 29 Sep 2016 20:08:47 +0200</pubDate>
      
      <guid>https://adamruul.github.io/post/welcome/</guid>
      <description>&lt;p&gt;HELLO MY FRIENDS
&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;startNumber&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;int&lt;/span&gt;(&lt;span style=&#34;color: #A90D91&#34;&gt;raw_input&lt;/span&gt;(&lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;Enter the start number here &amp;quot;&lt;/span&gt;))
&lt;span style=&#34;color: #000000&#34;&gt;endNumber&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;int&lt;/span&gt;(&lt;span style=&#34;color: #A90D91&#34;&gt;raw_input&lt;/span&gt;(&lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;Enter the end number here &amp;quot;&lt;/span&gt;))

&lt;span style=&#34;color: #A90D91&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;fib&lt;/span&gt;(&lt;span style=&#34;color: #000000&#34;&gt;n&lt;/span&gt;):
    &lt;span style=&#34;color: #A90D91&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;n&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #1C01CE&#34;&gt;2&lt;/span&gt;:
        &lt;span style=&#34;color: #A90D91&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;n&lt;/span&gt;
    &lt;span style=&#34;color: #A90D91&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;fib&lt;/span&gt;(&lt;span style=&#34;color: #000000&#34;&gt;n-&lt;/span&gt;&lt;span style=&#34;color: #1C01CE&#34;&gt;2&lt;/span&gt;) &lt;span style=&#34;color: #000000&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;fib&lt;/span&gt;(&lt;span style=&#34;color: #000000&#34;&gt;n-&lt;/span&gt;&lt;span style=&#34;color: #1C01CE&#34;&gt;1&lt;/span&gt;)

&lt;span style=&#34;color: #A90D91&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;map&lt;/span&gt;(&lt;span style=&#34;color: #000000&#34;&gt;fib&lt;/span&gt;, &lt;span style=&#34;color: #A90D91&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color: #000000&#34;&gt;startNumber&lt;/span&gt;, &lt;span style=&#34;color: #000000&#34;&gt;endNumber&lt;/span&gt;))
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>